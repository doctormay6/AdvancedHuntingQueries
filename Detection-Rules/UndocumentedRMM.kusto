// Undocumented Remote Admin Tool
// list of tools compiled from: https://github.com/0x706972686f/RMM-Catalogue
// NOTE: does not yet support file name wildcards
//------------------------------------------------------------------
// EXCLUSIONS GO HERE, PLEASE LEAVE A COMMENT WITH EXPLANATION
let ApprovedRMM = datatable(Software:string, DeviceSubstring:string) [
    "Quick Assist", "",              // Approved internal software
    "TeamViewer", "exampledevice1",  // X user allowed -- see ticket #12345
];
//------------------------------------------------------------------
let RMMCatalogue = materialize(
    (externaldata(response: string) [@"https://raw.githubusercontent.com/0x706972686f/RMM-Catalogue/main/rmm.csv"] with (format="txt"))
    | where response !startswith "Software"
    | project response
    | extend data = parse_csv(response)
    | extend
        Software = tostring(data[0]),
        URL = tostring(data[1]),
        FileNames = parse_csv(tostring(data[2])),
        Category = tostring(data[3])
    | mv-expand FileName = FileNames
    | extend FileName = replace_string(tostring(FileName), "*", "")  // TODO: support wildcard search
    | project-away response, ['data'], FileNames
    | where Software !in~ ("Guacamole", "Royal Server", "Royal TS")  // client-only; no risk
    | where FileName !in~ ("vncviewer.exe")  // client-only; no risk
    | extend PackedRecord = pack_all()
);
// get all RMM file events and processes
let RMMFiles = (
    RMMCatalogue
    | extend FileName = tolower(FileName)
    | join kind=inner (
        union DeviceFileEvents, DeviceProcessEvents, DeviceNetworkEvents
        | where ActionType != "FileDeleted"
        | extend FileName = tolower(FileName)
    ) on FileName
    | where not (FileName == "winvnc.exe" and ActionType != "ProcessCreated")  // exclude UltraVNC if server not launched
);
// Find software+device combos that need to be excluded
let ExcludedRMM = RMMFiles
| join kind=inner ApprovedRMM on Software
| where DeviceName contains DeviceSubstring
| distinct Software, DeviceName
;
// Get devices with undocumented RMM software
RMMFiles
| join kind=anti ExcludedRMM on Software, DeviceName
| extend User = iff(AccountName != "", AccountName, InitiatingProcessAccountName)
| summarize Timestamp=max(Timestamp), Accounts=make_set(User), Executables=make_set(FileName) by Software, DeviceName
| join RMMFiles on Software, Timestamp, DeviceName
| project-away *1
| project-reorder Timestamp, Software, DeviceName, Accounts, Executables, ReportId
| sort by Software asc, Timestamp
